
h2. Startup Files

The following files are read when Buildr is starting up.
|_<. Files    		|_<. Name 					| _<. Used For |
|Personal buildfile	|@$HOME/.buildr/buildr.rb@ 	|Personal tasks?|
|Common buildfile	|@buildr.rb@               	|Helper methods and variables|
|THE Buildfile		|@Buildfile@               	| The main projects and tasks|
|Task files			| @tasks/\*.task@			| Reusable tasks|
		

Setting can be specified in the following ways.
|_<.Type of setting |_<. File |_<. Accessor method |
|Personal  | @$HOME/.buildr/settings.yaml@ | @Buildr.settings.user@|
|Build  |@build.yaml@ |@Buildr.settings.build@|
|Profile |@profiles.yaml@|@Buildr.settings.profile@|


h2. Environment Variables

Environment variables can be specified like this, ordered by precedence:
* In the startup buildfiles - @ENV['JAVA_OPTS'] ||= '-Xms1g -Xmx1g'@
* On command line - @buildr test=no@
* As an environment variable - @export HTTP_PROXY=http://myproxy:8080@

|_<. Variable    |_<. Description |
| @BUILDR_ENV@  | Environment (development, test,...). @-e@ command line option. |
| @DEBUG@       | Set to @no/off@, compile without debugging  |
| @HOME@        | Your home directory. |
| @HTTP_PROXY@  | URL for HTTP proxy server for repositories. |
| @HTTPS_PROXY@ | URL for HTTPS proxy server for repositories. |
| @IGNORE_BUILDFILE@ | Set to @true/yes@ to ignore changes when running tests. |
| @JAVA_HOME@   | Points to your JDK |
| @JAVA_OPTS@   | Options to pass to the JDK (e.g. @'-Xms1g'@). |
| @M2_REPO@     | Location of the Maven2 local repository. |
| @NO_PROXY@    | Comma separated list of hoststhat should not be proxied  |
| @TEST@        | Set to @no/off/all@ to tell Buildr to skip tests, or run all tests |
| @USER@        | Tasks that need your user name will use this. |

h2. Tasks

h3. Compile Task

|from(\*sources) | Adds source directories to compile|
|into(target_dir) | Sets the target directory |
|using(options_hash) | Sets options for the compiler, the first argument may be the compiler itself (:scalac, :javac, :groovyc)|
|with(\*artifacts)| Sets the dependencies for the compile task|

h3. Resources Task

|exclude(\*files)| Excludes files from copying|
|from(\*source)| Adds source directories to be copied|
|include(\*files)| Includes files in copying|
|filter| Access the filter task attached to this Task| 

h3. Filter Task

|using(map_hash)| Name-value pairs to translate the keys in the code that is filtered, first argument may choose mapping style (:ant, :maven, :ruby, :erb , Rgexp)|

h3. Archive Task, Zip Task, Tar Task, Package Gem Task, Jar Task

|exclude(\*files)| Excludes files|
|merge(\*archives)| Merges the archives into this archive|
|include(\*files)| Includes files|
|with(options_hash)| Sets options for the task| 

h3. Test Task

|exclude(\*tests)| Excludes files|
|include(\*tests)| Includes files|
|only_run(\tests)| Only run selected tests|
|only_run_failed()| Only run tests that failed on the last run|
|using(options_hash) | Sets options for the test framework, the first argument may be the test framework or type itself (:integration, :testng, :specs, etc)|
|with(\*artifacts)| Sets the dependencies for the compile task|

h3. Release Task, GitRelease, SvnRelease
|make||

h3. Artifact Task
|download| Downloads the given artifact|
|group(*names, :under=> package, :version=>ver)|Creates artifacts array|


